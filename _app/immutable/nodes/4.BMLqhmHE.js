import{l as Y,t as z,a as C,s as T,e as Z}from"../chunks/CFY8pKPs.js";import"../chunks/tPZmkHVL.js";import{l as L,ak as ee,b as ae,al as F,p as R,t as G,a as X,c as d,s as h,r as o,h as te,g as p,am as ie,an as se,f as oe,e as q,ao as O}from"../chunks/Ui0odWkV.js";import{e as U,i as $}from"../chunks/22UVS0nG.js";import{s as y,r as re}from"../chunks/D1BDpSVn.js";import{i as H}from"../chunks/44LQqfMQ.js";import{t as ne}from"../chunks/B15clRiV.js";import{i as le,p as N}from"../chunks/C7VOOes3.js";import{b as V}from"../chunks/ubS_YAWF.js";import{P as ce}from"../chunks/D3Qfprra.js";function de(r,i,a,s){var n=r.__style;if(L||n!==i){var l=ne(i);(!L||l!==r.getAttribute("style"))&&(l==null?r.removeAttribute("style"):r.style.cssText=l),r.__style=i}return s}const I=new Set;function me(r,i,a,s,n=s){var l=a.getAttribute("type")==="checkbox",t=r;let _=!1;if(i!==null)for(var g of i)t=t[g]??(t[g]=[]);t.push(a),Y(a,"change",()=>{var e=a.__value;l&&(e=K(t,e,a.checked)),n(e)},()=>n(l?[]:null)),ee(()=>{var e=s();if(L&&a.defaultChecked!==a.checked){_=!0;return}l?(e=e||[],a.checked=e.includes(a.__value)):a.checked=le(a.__value,e)}),ae(()=>{var e=t.indexOf(a);e!==-1&&t.splice(e,1)}),I.has(t)||(I.add(t),F(()=>{t.sort((e,c)=>e.compareDocumentPosition(c)===4?-1:1),I.delete(t)})),F(()=>{if(_){var e;if(l)e=K(t,e,a.checked);else{var c=t.find(v=>v.checked);e=c==null?void 0:c.__value}n(e)}})}function K(r,i,a){for(var s=new Set,n=0;n<r.length;n+=1)r[n].checked&&s.add(r[n].__value);return a||s.delete(i),Array.from(s)}const ge={name:"Blood Vessels",id:"1",short_description:"University project for blood vessel detection from retinal images",categories:["machine-learning","bioinformatics"],tags:["Python","TensorFlow","Numpy","Scikit-learn","Google Colab","OpenCV"],title_image:"/assets/projects/Project1/Image_03L.png",images:["/assets/projects/Project1/Image_03L.png","/assets/projects/Project1/Image_05R.png"],repo:"https://github.com/MarKr17/BloodVessels",takeaways:["Developed a deep learning model for blood vessel detection in retinal images using TensorFlow.","Utilized convolutional neural networks (CNNs) for image segmentation tasks.","Implemented data augmentation techniques to improve model performance.","Gained experience in using Google Colab for cloud-based machine learning projects.","Learned to preprocess and analyze medical imaging data."],description:"This project focuses on developing a deep learning-based solution to automatically detect blood vessels in retinal images. The ability to identify blood vessels is crucial for diagnosing various eye diseases, such as diabetic retinopathy, glaucoma, and age-related macular degeneration. By leveraging TensorFlow, an open-source machine learning framework, the project aims to train a convolutional neural network (CNN) to efficiently and accurately segment blood vessels from retinal images. By automating the process of blood vessel detection in retinal images, this project aims to aid in the timely diagnosis of eye diseases and reduce the workload of healthcare professionals."},pe={name:"Multiple Sclerosis and EBV",id:"2",short_description:"Multi agent model of demyelination in multiple sclerosis using Mesa library",categories:"bioinformatics",tags:["Python","MESA","Numpy","Pygame","Pandas","Seaborn","Matplotlib"],title_image:"/assets/projects/Project2/title_image.jpg",images:["/assets/projects/Project2/model.gif"],repo:"https://github.com/MarKr17/Praca-magisterska/tree/main",takeaways:["Developed a multi-agent simulation model to study the relationship between Epstein-Barr Virus (EBV) infection and Multiple Sclerosis (MS).","Utilized the MESA library for agent-based modeling and simulation.","Tested hypotheses related to MS development, including molecular mimicry, epitope spreading, and bystander activation.","Analyzed simulation data using Pandas and visualized results with Seaborn and Matplotlib.","Gained experience in using Pygame for visualizing model dynamics."],description:"This project focuses on creating a multi-agent simulation model to investigate the relationship between Epstein-Barr Virus (EBV) infection and the onset of Multiple Sclerosis (MS). Using agent-based modeling, the project aims to test three key hypotheses related to MS development: molecular mimicry, epitope spreading, and bystander activation. The model simulates immune system interactions and demyelination processes, providing insights into how EBV may trigger MS. The project also includes visualizing the model dynamics using the Pygame library and analyzing the collected data with various plots."},ve={name:"GCN for MS protein interactions",id:"3",short_description:"Graph Convolutional Network to discover novel protein interactions in Multiple Sclerosis.",categories:["bioinformatics","machine-learning"],tags:["Python","TensorFlow","Numpy","SciPy","NetworkX","Scikit-learn","Cytoscape"],title_image:"/assets/projects/Project3/MergedNetwork.png",images:["/assets/projects/Project3/MergedNetwork.png"],repo:"https://github.com/MarKr17/GCN-MS",takeaways:["Machine Learning in Biology: Applied GCNs with TensorFlow to uncover novel protein interactions in MS.","Efficient Data Processing: Used Python, Numpy, and SciPy for handling and analyzing large-scale PPI networks.","Network Analysis: Leveraged NetworkX to build and analyze protein interaction networks.","Data Visualization: Employed Cytoscape for visualizing complex PPI networks and GCN results.","Therapeutic Targets: Identified novel protein interactions as potential MS biomarkers or drug targets.","Scalable Framework: Methodology is adaptable to other diseases, offering broader research potential.","Cross-disciplinary Approach: Combined computational biology, machine learning, and systems biology for MS research."],description:"This project leverages Graph Convolutional Networks (GCNs) to uncover novel protein-protein interactions in Multiple Sclerosis (MS). Using data from the APID (Ariadne Protein Interaction Database), we construct detailed protein interaction networks relevant to MS. GCNs, a powerful machine learning technique, are applied to these networks to reveal hidden relationships and previously overlooked connections between proteins. The primary goal is to identify new interactions that may play a role in MS pathogenesis. By discovering these novel connections, we aim to gain insights into the molecular mechanisms driving the disease. These findings could also highlight potential biomarkers or therapeutic targets for MS. The project combines advanced computational methods with biological data to push forward MS research. Ultimately, the goal is to contribute to new avenues for MS treatment and diagnosis. The results may also serve as a model for using GCNs in other diseases. This innovative approach could pave the way for more targeted and personalized therapies."},ue={Project1:ge,Project2:pe,Project3:ve};var fe=z('<div class="option svelte-s8jib7"><input class="sr-only svelte-s8jib7" type="checkbox"> <label class="option svelte-s8jib7"> </label></div>'),he=z('<div role="radiogroup" class="group-container svelte-s8jib7"><div class="legend svelte-s8jib7"> </div> <div class="options gap-10 svelte-s8jib7"></div></div>');function ye(r,i){R(i,!1);const a=[];let s=N(i,"options",8),n=N(i,"legend",8),l=N(i,"userSelected",28,()=>[]),t=N(i,"fontSize",8,16),_=N(i,"flexDirection",8,"column");const g=`legend-${Math.floor(Math.random()*100)}`,e=(u="")=>u.toLowerCase().replace(/ /g,"-").replace(/\./g,"");H();var c=he();y(c,"aria-labelledby",`label-${g}`),y(c,"id",`group-${g}`);var v=d(c);y(v,"id",`label-${g}`);var B=d(v,!0);o(v);var w=h(v,2);U(w,5,s,({value:u,label:m})=>u,(u,m)=>{let b=()=>p(m).value,S=()=>p(m).label;var x=fe(),f=d(x);re(f);var k,M=h(f,2),P=d(M,!0);o(M),o(x),G((D,j,A)=>{y(f,"id",D),k!==(k=j)&&(f.value=(f.__value=j)==null?"":j),y(M,"for",A),T(P,S())},[()=>`${g}-${e(b())}`,()=>e(b()),()=>`${g}-${e(b())}`],te),me(a,[],f,()=>(e(b()),l()),l),C(u,x)}),o(w),o(c),G(()=>{de(c,`font-size:${t()??""}px; flex-direction:${_()??""}`),T(B,n())}),C(r,c),X()}var be=z('<span class="tag secondary"> </span>'),_e=z('<div class="bg-white rounded-xl shadow-lg overflow-hidden flex flex-col h-full transition-transform duration-300 hover:shadow-xl hover:-translate-y-1"><div class="h-28 2xl:h-52 overflow-hidden"><img class="w-full h-full object-cover"></div> <div class="p-4 2xl:p-6 flex flex-col flex-grow"><h3 class="mb-3"> </h3> <p class=" mb-4 flex-grow"> </p> <div class="flex flex-wrap gap-2 mb-4"></div> <a class="smaller mt-2 inline-flex items-center justify-center py-2 px-4 rounded-lg bg-[var(--lm_primary)] text-white">Read more <i class="fas fa-arrow-right ml-2"></i></a></div></div>'),we=z('<div class="flex flex-col items-center py-1 2xl:py-6 bg-gray-50"><h2 class="mb-4">Projects</h2> <div class="w-full md:max-w-3xl  px-2 md:px-4 items-center"><!></div></div> <div class="container mx-auto px-4 my-1 2xl:my-6"><a class="inline-flex items-center text-lg font-medium transition-colors duration-300 accent"><i class="fas fa-arrow-left mr-2"></i> <span>Back to Home</span></a></div> <div class="container mx-auto px-4 mb-16"><div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 2xl:gap-6"></div></div>',1);function Be(r,i){R(i,!1);const a=O();let s=O();const n=[{value:"data-analytics",label:"Data Analytics"},{value:"machine-learning",label:"Machine Learning"},{value:"bioinformatics",label:"Bioinformatics"}];ie(()=>p(s),()=>{q(a,Object.fromEntries(Object.entries(ue).filter(([w,u])=>p(s)===void 0||p(s).length===0?!0:p(s).every(m=>u.categories.includes(m)))))}),se(),H();var l=we(),t=oe(l),_=h(d(t),2),g=d(_);ye(g,{options:n,get userSelected(){return p(s)},set userSelected(w){q(s,w)},$$legacy:!0}),o(_),o(t);var e=h(t,2),c=d(e);y(c,"href",`${V??""}/`),o(e);var v=h(e,2),B=d(v);U(B,5,()=>Object.entries(p(a)),$,(w,u)=>{let m=()=>p(u)[1];var b=_e(),S=d(b),x=d(S);o(S);var f=h(S,2),k=d(f),M=d(k,!0);o(k);var P=h(k,2),D=d(P,!0);o(P);var j=h(P,2);U(j,5,()=>m().tags,$,(J,Q)=>{var E=be(),W=d(E,!0);o(E),G(()=>T(W,p(Q))),C(J,E)}),o(j);var A=h(j,2);y(A,"href",`${V??""}/Project_page`),o(f),o(b),G(()=>{y(x,"src",`${V??""}${m().title_image??""}`),y(x,"alt",m().name),T(M,m().name),T(D,m().short_description)}),Z("click",A,()=>ce.set(m())),C(w,b)}),o(B),o(v),C(r,l),X()}export{Be as component};
